//배열 두배 만들기

 class Solution {
    public int[] solution(int[] numbers) {
        int[] answer = new int[numbers.length];
        for(int i = 0; i < numbers.length; i++){
             answer[i] = numbers[i] * 2;
        }
        return answer;
    }
}

//배열 자르기
class Solution {
    public int[] solution(int[] numbers, int num1, int num2) {
        int[] answer = new int[num2-num1+1];  
        int count  = 0;
            for(int i = num1; i <= num2 ; i++){ 
             answer[count] = numbers[i];
             count++;
            } 
         
            
        return answer;
    }
}

//배열의 유사도
class Solution {
    public int solution(String[] s1, String[] s2) {
        int answer = 0;
        for(int i = 0; i < s2.length; i++){
            for(int j = 0; j < s1.length; j++){
                if(s2[i].equals(s1[j])){
                    answer++;
                }
            }
        }
        return answer;
    }
} 

//문자열 뒤집기
class Solution {
    public String solution(String my_string) {
        String answer = "";
        int a = my_string.length(); 
        for(int i = a; i > 0; i--){
            answer += my_string.substring(i-1,i);
        }
        return answer;
    }
}

//짝수는 싫어요
class Solution {
    public int[] solution(int n) { 
        int ss = 0;
        if( n % 2 == 0){
            ss = n/2;
        }else{
            ss = n/2 +1;
        } 
        int[] answer = new int[ss];
        answer[0] = 1;
        for(int i = 1 ; i  < ss ; i++){
            answer[i] = answer[i-1]+ 2; 
            }
            
          return answer;
        }
       
   
}
